// PSEUDO CODE
// - wire framing —> 
// how I want the app to look,
I want the app to have three buttons that represent 3 colors red, black, green 
// what I want it to do / how users will interact
the user will get a link that directs them to the home page. 
I want a user to click one of three buttons,
the object of color would need to be saved and then maniplated
the button click is going to go through an API the runs a probability
the return statement is going to get plugged back into the document and show if they win or lose their bet

// properties to send to post method
instead of name and email
send button name: button value: red 
send button name: button value: green
send button name: button value: black

// - run server  
confirmed working
// - create new collection in MongoDB --> change collection names in code (db.collection('<collectionName>'))
   
// - check connection to my server 

// - set up front end (inputs, where I want things to be positioned (affects childnodes))

//routes
// - GET —> how many pages in my app? how many collections? 
there is a collection for the button presses
there are two pages, the home page and the admin page
//--> rename res.render('index.ejs', {<collectionName>: result})
//--> rename arry inside of index.ejs to  <collectionName>[i].length, <collectionName>[i].<property>, etc.


// - POST —> form inside of index.ejs -> what inputs / request body information do I want to send to the database? 


// - PUT —> fetch call through main.js | what am I updating? what identifiers will I use to find that specific document?
// --> send idenitifier information inside of fetch body. every property inside of JSON body request = req.body.<property> in server.js

// - DELETE —> fetch call through main.js | what identifiers will I use to find that specific document?